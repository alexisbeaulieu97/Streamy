name: ci

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - name: Verify formatting
        run: gofmt -l . | tee /tmp/gofmt.txt && test ! -s /tmp/gofmt.txt
      - name: Run all tests
        run: go test ./... -coverprofile=coverage_all.out
      - name: Run unit tests with coverage (excluding cmd)
        run: go test ./internal/... ./pkg/... -coverprofile=coverage.out -covermode=atomic
      - name: Enforce coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | awk 'END {print $3}' | sed 's/%//')
          echo "Coverage (excluding cmd): ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Coverage ${COVERAGE}% is below 80% threshold"
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - uses: golangci/golangci-lint-action@v4
        with:
          install-mode: goinstall
          version: latest
          args: --timeout=5m --out-format=colored-line-number

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.25"
      - name: Build binaries
        run: ./scripts/build.sh
